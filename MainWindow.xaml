<Window x:Class="SixteenCoreCharacterMapper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SixteenCoreCharacterMapper"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Height="940" Width="1800"
        KeyDown="Window_KeyDown"
        Closing="Window_Closing"
        SizeChanged="Window_SizeChanged">

    <Window.Resources>
        <ResourceDictionary>
            <x:Null x:Key="LockedIconImageSource"/>
            <x:Null x:Key="UnlockedIconImageSource"/>
            <x:Null x:Key="VisibleIconImageSource"/>
            <x:Null x:Key="HiddenIconImageSource"/>

            <local:BooleanToLockTooltipConverter x:Key="BoolToLockTooltipConverter"/>
            <local:BooleanToVisibilityTooltipConverter x:Key="BoolToVisibilityTooltipConverter"/>
            <local:BubbleSizeToGroupHeaderConverter x:Key="BubbleSizeConverter"/>
            <local:BooleanToHiddenConverter x:Key="BooleanToHiddenConverter"/>

            <CollectionViewSource x:Key="GroupedCharacters" Source="{Binding Project.Characters}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Size"/>
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="Size" Direction="Descending"/>
                    <componentModel:SortDescription PropertyName="DisplayOrder" Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <Style x:Key="FlatButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="Transparent">
                                <Image x:Name="Icon" Width="12" Height="13" SnapsToDevicePixels="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                    <Setter TargetName="Icon" Property="Source" Value="{DynamicResource LockedIconImageSource}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLocked}" Value="False">
                                    <Setter TargetName="Icon" Property="Source" Value="{DynamicResource UnlockedIconImageSource}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VisibilityButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="Transparent">
                                <Image x:Name="Icon" Width="17" Height="13" Margin="0,2,0,0" SnapsToDevicePixels="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                    <Setter TargetName="Icon" Property="Source" Value="{DynamicResource VisibleIconImageSource}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                    <Setter TargetName="Icon" Property="Source" Value="{DynamicResource HiddenIconImageSource}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="CharacterListButtonStyle" TargetType="Button">
                <Setter Property="Padding" Value="5,2"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="9"/>
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="Background" Value="#F0F0F0"/>
                <Setter Property="BorderBrush" Value="#CCCCCC"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#E0E0E0"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#AAAAAA"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#D0D0D0"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#999999"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DarkCharacterListButtonStyle" TargetType="Button">
                <Setter Property="Padding" Value="5,2"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="9"/>
                <Setter Property="Foreground" Value="#E0E0E0"/>
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#444444"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#777777"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#555555"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#999999"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TutorialHighlightStyle" TargetType="Border">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="#ad87ff"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="CornerRadius" Value="2"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="RootScaleTransform" />
        </Grid.LayoutTransform>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ToolBar x:Name="MainToolBar" Grid.Row="0" Margin="5" ToolBarTray.IsLocked="True" HorizontalContentAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Content=" New Project " Style="{StaticResource ToolBarButtonStyle}" Margin="10,5,0,5" Padding="5" Command="{Binding NewProjectCommand}"/>
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="30,5"/>
                    <Button Content=" Load " Style="{StaticResource ToolBarButtonStyle}" Margin="0,5,0,5" Padding="5" Command="{Binding LoadProjectCommand}"/>
                    <Button Content=" Save " Style="{StaticResource ToolBarButtonStyle}" Margin="5,5,0,5" Padding="5" Command="{Binding SaveProjectCommand}"/>
                    <Button Content=" Save As... " Style="{StaticResource ToolBarButtonStyle}" Margin="5,5,0,5" Padding="5" Command="{Binding SaveAsProjectCommand}"/>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="30,5"/>
                    <Grid Margin="0,5,0,5">
                        <Button x:Name="ExportImageButton" Content=" Export Image " Style="{StaticResource ToolBarButtonStyle}" Padding="5" Click="ExportImage_Click"/>
                        <Border x:Name="ExportImageHighlight" Style="{StaticResource TutorialHighlightStyle}" Visibility="Collapsed"/>
                    </Grid>
                    <Grid Margin="5,5,0,5">
                        <Button x:Name="ToggleThemeButton" Content=" Toggle Dark Mode " Style="{StaticResource ToolBarButtonStyle}" Padding="5" Command="{Binding ToggleThemeCommand}" Click="ToggleThemeButton_Click"/>
                        <Border x:Name="ToggleThemeHighlight" Style="{StaticResource TutorialHighlightStyle}" Visibility="Collapsed"/>
                    </Grid>

                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="30,5"/>

                    <Button Content=" Tutorial " Style="{StaticResource ToolBarButtonStyle}" Margin="0,5,0,5" Padding="5" Click="Tutorial_Click"/>
                    <Button Content=" About " Style="{StaticResource ToolBarButtonStyle}" Margin="5,5,0,5" Padding="5" Click="About_Click"/>
                    <Button Content=" Donate " Style="{StaticResource ToolBarButtonStyle}" Margin="5,5,10,5" Padding="5" Click="Donate_Click"/>
                </StackPanel>
            </Grid>
        </ToolBar>

        <Border x:Name="ToolBarDivider" Grid.Row="1" BorderThickness="0,0,0,1" Margin="5,0,5,0"/>

        <Grid Grid.Row="2" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" Margin="5,0,5,5">
                <TextBlock x:Name="ProjectNameLabel" Text="Project Title:" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,5,5"/>
                <Grid>
                    <TextBox x:Name="ProjectNameTextBox" VerticalAlignment="Center" Text="{Binding ProjectName}" TextChanged="ProjectNameTextBox_TextChanged" GotFocus="ProjectNameTextBox_GotFocus" LostFocus="ProjectNameTextBox_LostFocus"/>
                    <Border x:Name="ProjectNameHighlight" Style="{StaticResource TutorialHighlightStyle}" Visibility="Collapsed"/>
                </Grid>
            </StackPanel>

            <DockPanel Grid.Row="1" Grid.Column="0" PreviewMouseLeftButtonDown="CharactersList_Container_PreviewMouseLeftButtonDown">
                <Grid DockPanel.Dock="Top" Margin="5,20,5,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock x:Name="CharactersLabel" Grid.Column="0" Text="Characters" FontWeight="Bold" VerticalAlignment="Center"/>
                    <Grid Grid.Column="1">
                        <StackPanel x:Name="CharacterListButtons" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Grid>
                                <Button x:Name="AddCharacterButton" Content="Add" Style="{StaticResource CharacterListButtonStyle}" Command="{Binding AddCharacterCommand}"/>
                                <Border x:Name="CharacterButtonsHighlight" Style="{StaticResource TutorialHighlightStyle}" Visibility="Collapsed"/>
                            </Grid>
                            <Button Content="Edit" Style="{StaticResource CharacterListButtonStyle}" Margin="4,0,0,0" Command="{Binding EditCharacterCommand}"/>
                            <Button Content="Delete" Style="{StaticResource CharacterListButtonStyle}" Margin="4,0,0,0" Command="{Binding DeleteCharacterCommand}"/>
                        </StackPanel>
                    </Grid>
                </Grid>

                <ListView x:Name="CharactersList"
                          ItemsSource="{Binding Source={StaticResource GroupedCharacters}}"
                          SelectedItem="{Binding SelectedCharacter}"
                          Margin="5,0,5,5"
                          KeyDown="CharactersList_KeyDown"
                          AllowDrop="True"
                          Drop="CharactersList_Drop"
                          DragOver="CharactersList_DragOver"
                          DragLeave="CharactersList_DragLeave">

                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="4,15,4,4">
                                        <TextBlock FontWeight="Bold"
                                               FontSize="14"
                                               Text="{Binding Name, Converter={StaticResource BubbleSizeConverter}}"
                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListView}}"/>

                                        <Border BorderThickness="0,0,0,0.5"
                                            BorderBrush="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListView}}"
                                            Opacity="0.2"
                                            Margin="0,5,0,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown"/>
                            <EventSetter Event="PreviewMouseMove" Handler="ListViewItem_PreviewMouseMove"/>
                            <EventSetter Event="MouseDoubleClick" Handler="Character_MouseDoubleClick"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="2,2,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Ellipse Grid.Column="0" Width="16" Height="16" Fill="{Binding ColorHex}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,5,0" Visibility="{Binding IsVisible, Converter={StaticResource BooleanToHiddenConverter}}"/>

                                <TextBlock Grid.Column="1" Text="{Binding Name}" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                    <Setter Property="Opacity" Value="0.6"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <Grid>
                                        <Border x:Name="LockHighlight" Style="{StaticResource TutorialHighlightStyle}" Visibility="Collapsed"/>
                                        <Button x:Name="LockButton" ToolTip="{Binding IsLocked, Converter={StaticResource BoolToLockTooltipConverter}}"
                                                Style="{StaticResource FlatButtonStyle}"
                                                Command="{Binding DataContext.ToggleLockCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                CommandParameter="{Binding}"
                                                PreviewMouseLeftButtonDown="IconButton_PreviewMouseLeftButtonDown"
                                                Margin="2"/>
                                    </Grid>
                                    <Grid>
                                        <Border x:Name="VisibilityHighlight" Style="{StaticResource TutorialHighlightStyle}" Visibility="Collapsed"/>
                                        <Button x:Name="VisibilityButton" ToolTip="{Binding IsVisible, Converter={StaticResource BoolToVisibilityTooltipConverter}}"
                                                Style="{StaticResource VisibilityButtonStyle}"
                                                Command="{Binding DataContext.ToggleVisibilityCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                CommandParameter="{Binding}"
                                                PreviewMouseLeftButtonDown="IconButton_PreviewMouseLeftButtonDown"
                                                Margin="2"/>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </DockPanel>

            <Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" x:Name="TraitsGrid" Margin="10,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
            </Grid>
        </Grid>

        <Popup x:Name="TutorialPopup" AllowsTransparency="True" Placement="Right" StaysOpen="True" HorizontalOffset="10" VerticalOffset="0">
            <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="1" Background="#FFFAFAFA" Padding="10" MaxWidth="250">
                <StackPanel>
                    <TextBlock x:Name="TutorialTextBlock" FontSize="15" TextWrapping="Wrap" Foreground="Black"/>
                    <Button x:Name="TutorialButton" Content="Got it!" HorizontalAlignment="Right" Margin="0,10,0,0" Style="{StaticResource ToolBarButtonStyle}" Click="TutorialButton_Click"/>
                </StackPanel>
            </Border>
        </Popup>

    </Grid>
</Window>


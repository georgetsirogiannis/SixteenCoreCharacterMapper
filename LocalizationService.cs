using System.Globalization;
using System.Resources;
using SixteenCoreCharacterMapper.Properties;

public class LocalizationService
{
    private ResourceManager _resourceManager;
    private CultureInfo _currentCulture;

    public LocalizationService()
    {
        // Use correct resource base name for Properties folder
        _resourceManager = new ResourceManager("SixteenCoreCharacterMapper.Properties.Strings", typeof(LocalizationService).Assembly);
        _currentCulture = CultureInfo.CurrentUICulture;
    }

    public string GetString(string key)
    {
        var str = _resourceManager.GetString(key, _currentCulture);
        return str ?? string.Empty;
    }

    public void SetCulture(string cultureCode)
    {
        if (string.IsNullOrEmpty(cultureCode)) return;
        _currentCulture = new CultureInfo(cultureCode);

        // Set thread and default cultures so autogenerated Resources use correct culture
        CultureInfo.CurrentUICulture = _currentCulture;
        CultureInfo.CurrentCulture = _currentCulture;
        CultureInfo.DefaultThreadCurrentCulture = _currentCulture;
        CultureInfo.DefaultThreadCurrentUICulture = _currentCulture;

        // If the auto-generated resource class exposes a Culture property, set it so calls to Properties.Strings return localized strings
        try
        {
            Strings.Culture = _currentCulture;
        }
        catch { /* Ignore if not present */ }
    }
}